plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id "com.github.node-gradle.node" version "3.3.0"
}

group = 'com.heon'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// jwt 설정
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Json type BTYPE?
	implementation "com.vladmihalcea:hibernate-types-52:1.0.0"

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.3.1'
	implementation 'io.lettuce.core:lettuce-core'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	compileOnly 'org.projectlombok:lombok'
	// runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'com.mysql:mysql-connector-j'
}

tasks.named('test') {
	useJUnitPlatform()
}

node {
	nodeModulesDir = file("$projectDir/front-end")
	version = '18.3.0'
	download = true
}
task npmBuild(type: NpmTask) {
	args = ['run', "build"]
}
task copyFrontEnd(type: Copy) {
	from "$projectDir/front-end/static"
	into 'build/resources/main/static/.'
}

task cleanFrontEnd(type: Delete) {
	delete "$projectDir/front-end/static", "$projectDir/front-end/node_modules"
}
//npmBuild.dependsOn npmInstall
//copyFrontEnd.dependsOn npmBuild
//compileJava.dependsOn copyFrontEnd
//clean.dependsOn cleanFrontEnd
